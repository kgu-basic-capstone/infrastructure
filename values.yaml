replicaCount: 1

image:
  repository: ghcr.io/kgu-basic-capstone/spring
  tag: build-1
  pullPolicy: Always

service:
  type: ClusterIP
  port: 8080
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8080"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

ingress:
  enabled: false
  className: "traefik"
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: api.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific

resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

serviceMonitor:
  enabled: true
  namespace: default
  interval: 15s
  path: /metrics
  labels:
    release: prometheus

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

env:
  - name: DB_URL
    value: "jdbc:mysql://spring-mysql:3306/myapp_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8"
  - name: DB_NAME
    value: "myapp_db"
  - name: DB_USERNAME
    value: "myapp_user"
  - name: DB_PASSWORD
    value: "myapp_password"
  - name: REDIS_HOST
    value: "spring-redis-master"
  - name: REDIS_PORT
    value: "6379"
  - name: REDIS_PASSWORD
    value: "myapp_password"
  - name: KAFKA_BOOTSTRAP_SERVERS
    value: "spring-kafka:9092"
  - name: JWT_SECRET
    value: "dev_jwt_secret_key"
  - name: JWT_EXPIRATION_MS
    value: "86400000"
  - name: SERVER_PORT
    value: "8080"

mysql:
  auth:
    database: myapp_db
    username: myapp_user
    password: myapp_password
    rootPassword: root_password
  primary:
    persistence:
      size: 8Gi
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: default
      interval: 15s
      labels:
        release: prometheus
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"
      prometheus.io/path: "/metrics"

mysqlExporter:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  config:
    datasource:
      host: spring-mysql
      user: myapp_user
      password: myapp_password

kafka:
  auth:
    enabled: false
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
  allowPlaintextListener: true
  replicaCount: 1
  heapOpts: "-Xmx512m -Xms512m"
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "500m"
  persistence:
    size: 8Gi
  zookeeper:
    persistence:
      size: 8Gi
    resources:
      requests:
        memory: "512Mi"
        cpu: "100m"
      limits:
        memory: "1Gi"
        cpu: "250m"
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  metrics:
    kafka:
      enabled: true
    jmx:
      enabled: true
    serviceMonitor:
      enabled: true
      namespace: default
      interval: 15s
      labels:
        release: prometheus

kafkaExporter:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  config:
    kafka:
      server: spring-kafka:9092
    topics:
      enabled: true
    groups:
      enabled: true
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9308"
      prometheus.io/path: "/metrics"

redis:
  auth:
    password: myapp_password
  architecture: standalone
  master:
    persistence:
      size: 8Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: default
      interval: 15s
      labels:
        release: prometheus
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9121"
      prometheus.io/path: "/metrics"

redisExporter:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: default
    interval: 15s
    labels:
      release: prometheus
  config:
    redis:
      address: spring-redis-master:6379
      password: myapp_password

providers:
  kubernetesCRD:
    allowCrossNamespace: true
    allowExternalNameServices: true
  kubernetesIngress:
    allowExternalNameServices: true
    publishedService:
      enabled: true